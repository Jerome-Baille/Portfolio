{"version":3,"file":"static/js/819.4d11a4aa.chunk.js","mappings":"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","sources":["components/stackIconsDisplay/StackIconsDisplay.jsx","features/Projects/ProjectsDetailPage/ProjectsDetailPresentation.jsx","features/Projects/ProjectsDetailPage/ProjectsDetailContainer.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import './stackIconsDisplay.scss'\r\n\r\nconst StackIconsDisplay = ({ item }) => {\r\n    return (\r\n        <div className='stack__element'>\r\n            <img src={process.env.PUBLIC_URL + item.url} alt={item.name} />\r\n            <p>{item.name}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StackIconsDisplay;","import React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub, faInternetExplorer } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport StackIconsDisplay from '../../../components/stackIconsDisplay/StackIconsDisplay';\r\n\r\nimport './projectsDetailPage.scss';\r\nimport { scroller } from 'react-scroll';\r\n\r\nconst ProjectsDetailPresentation = ({ \r\n    projectDataGeneric, \r\n    projectsDataLocale,\r\n    technologyList\r\n}) => {\r\n    const navigate = useNavigate();\r\n\r\n    const handleTagsLink = (tag) => {\r\n        const matchingItem = Object.values(technologyList).find(item => item.id.toUpperCase() === tag.trim().toUpperCase());\r\n        if (matchingItem) {\r\n          return (\r\n            <StackIconsDisplay key={matchingItem.id} item={matchingItem} />\r\n          )\r\n        } \r\n      }      \r\n\r\n      const handleNavigation = () => {\r\n        navigate('/');\r\n        setTimeout(() => {\r\n            scroller.scrollTo('projects', {\r\n                smooth: true,\r\n                offset: 0,\r\n                duration: 1000,\r\n            });\r\n        }, 500);\r\n      }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <section className=\"projectsDetailPage__section inside-container\">\r\n                <button onClick={handleNavigation} className='flat-button mr0 back-left'>\r\n                    <FontAwesomeIcon icon={faArrowLeft} />\r\n                    <span> {projectsDataLocale.backBtn}</span>\r\n                </button>\r\n                <div className=\"projectsDetailPage__text\">\r\n                    <header>\r\n                        <h1>\r\n                            {projectsDataLocale.title}\r\n                        </h1> \r\n                        <h2>\r\n                            {projectsDataLocale.subtitle}\r\n                        </h2>\r\n                    </header>\r\n\r\n                    <section id=\"descriptions\" className='projectsDetailPage__description-container'>\r\n                        {Object.keys(projectsDataLocale.descriptions).map((description, index) => (\r\n                            <div key={index} className='projectsDetailPage__description'>\r\n                                {projectsDataLocale.descriptions[description].title && \r\n                                    <h3>{projectsDataLocale.descriptions[description].title}</h3>}\r\n                                {projectsDataLocale.descriptions[description].content && \r\n                                    projectsDataLocale.descriptions[description].content.split('\\n').map((sentence, idx) => (\r\n                                        <p key={idx}>\r\n                                            {sentence}<br/>\r\n                                        </p>\r\n                                    ))}\r\n                            </div>\r\n                        ))}\r\n                    </section>\r\n\r\n                    <section id=\"skills\">\r\n                        <h3>\r\n                            {projectsDataLocale.skillsTitle}\r\n                        </h3>\r\n\r\n                        <ul>\r\n                            {(projectsDataLocale.skills).map((skill, index) => (\r\n                                <li key={index}>\r\n                                    {skill}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </section>\r\n\r\n                    <section id=\"stack\" className='projectsDetailPage__description-container'>\r\n                        <h3>\r\n                            {projectsDataLocale.stackTitle}\r\n                        </h3>\r\n                        <div className=\"projectsDetailPage__stack\">\r\n                            {(projectDataGeneric.tags.split(',')).map((stack, index) => (\r\n                                    handleTagsLink(stack, index)\r\n                            ))}\r\n                        </div>\r\n                    </section>\r\n                    <section id=\"improvement\">\r\n                        <h3>\r\n                            {projectsDataLocale.improvementTitle}\r\n                        </h3>\r\n                        <ul>\r\n                            {(projectsDataLocale.improvements).map((improvement, id) => (\r\n                                <li key={id}>\r\n                                    {improvement}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </section>\r\n                </div>\r\n\r\n                <div className=\"projectsDetailPage__image\">\r\n                    <button onClick={handleNavigation} className='flat-button mr0 back-right'>\r\n                        <FontAwesomeIcon icon={faArrowLeft} />\r\n                        <span> {projectsDataLocale.backBtn}</span>\r\n                    </button>\r\n                    {Object.keys(projectDataGeneric.pictures).map((picture, index) => (\r\n                        <figure key={index}>\r\n                            <img \r\n                                src={process.env.PUBLIC_URL + projectDataGeneric.pictures[picture].url} \r\n                                alt={projectsDataLocale.pictures[picture].alt}\r\n                                className='framed-picture'\r\n                            />\r\n                            <figcaption>\r\n                                Figure {index+1} : {projectsDataLocale.pictures[picture].alt}\r\n                            </figcaption>\r\n                        </figure>\r\n                    ))}\r\n\r\n                    <footer>\r\n                        <a \r\n                            href={projectDataGeneric.github} \r\n                            target=\"_blank\" \r\n                            rel=\"noopener noreferrer\" \r\n                            className=\"github-link\"\r\n                        >\r\n                            <FontAwesomeIcon icon={faGithub} />\r\n                        </a>\r\n                        {projectDataGeneric.demo? \r\n                            <a \r\n                                href={projectDataGeneric.demo} \r\n                                target=\"_blank\" \r\n                                rel=\"noopener noreferrer\" \r\n                                className=\"demo-link\"\r\n                            >\r\n                                <FontAwesomeIcon icon={faInternetExplorer} />\r\n                            </a> \r\n                        : null}\r\n                    </footer>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectsDetailPresentation;","import { useContext, useEffect, useMemo, useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loader from 'react-loaders'\r\nimport ProjectsDetailPresentation from './ProjectsDetailPresentation';\r\nimport projectList from '../../../assets/projectList.json';\r\nimport en from '../../../locales/en.json';\r\nimport fr from '../../../locales/fr.json';\r\nimport { LanguageContext } from '../../Layout/MainLayout';\r\n\r\nconst ProjectsDetailContainer = () => {\r\n    const { language } = useContext(LanguageContext);\r\n    const [projectsDataLocale, setProjectsDataLocale] = useState({});\r\n    const [projectDataGeneric, setProjectsDataGeneric] = useState();\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        let filteredData = {};\r\n        const projectData = language === 'fr' ? fr.projects : en.projects;\r\n\r\n        filteredData.skillsTitle = projectData.skillsTitle;\r\n        filteredData.stackTitle = projectData.stackTitle;\r\n        filteredData.improvementTitle = projectData.improvementTitle;\r\n        filteredData.backBtn = projectData.backBtn;\r\n\r\n        filteredData = {...filteredData, ...projectData[id]};\r\n\r\n        setProjectsDataLocale(filteredData);\r\n        setProjectsDataGeneric(projectList[id]);\r\n    }, [language, id]);\r\n\r\n    const technologyList = useMemo(() => {\r\n        return require('../../../assets/technologyList.json');\r\n      }, []);\r\n\r\n    if(!Object.keys(projectsDataLocale).length || !Object.keys(projectDataGeneric).length) {\r\n        return <Loader type=\"pacman\" />\r\n    }\r\n\r\n    return (\r\n        <ProjectsDetailPresentation \r\n            projectDataGeneric={projectDataGeneric} \r\n            projectsDataLocale={projectsDataLocale}\r\n            technologyList={technologyList}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProjectsDetailContainer;\r\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}"],"names":["item","className","src","process","url","alt","name","projectDataGeneric","projectsDataLocale","technologyList","navigate","useNavigate","handleNavigation","setTimeout","scroller","smooth","offset","duration","onClick","icon","faArrowLeft","backBtn","title","subtitle","id","Object","keys","descriptions","map","description","index","content","split","sentence","idx","skillsTitle","skills","skill","stackTitle","tags","stack","tag","matchingItem","values","find","toUpperCase","trim","StackIconsDisplay","handleTagsLink","improvementTitle","improvements","improvement","pictures","picture","href","github","target","rel","faGithub","demo","faInternetExplorer","language","useContext","LanguageContext","useState","setProjectsDataLocale","setProjectsDataGeneric","useParams","useEffect","filteredData","projectData","fr","en","projectList","useMemo","require","length","type","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","i","arguments","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}