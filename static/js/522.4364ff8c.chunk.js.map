{"version":3,"file":"static/js/522.4364ff8c.chunk.js","mappings":"uNAYA,EAZwB,SAAC,GAAoC,IAAlCA,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,IAChD,OACE,0BACGD,EAASE,KAAI,SAACC,EAAMC,GAAP,OACZ,iBAAqBC,UAAS,UAAKN,EAAL,aAAqBK,EAAIH,GAAvD,SACGE,GADQA,EAAOC,S,6BC0D1B,EAxD4B,SAAC,GAAmB,IAAlBE,EAAiB,EAAjBA,YAC1B,GAAsCC,EAAAA,EAAAA,UAAS,gBAA/C,eAAOR,EAAP,KAAoBS,EAApB,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACNC,YAAW,WACTF,EAAe,wBACd,SAIH,gBAAKH,UAAU,mBAAmBM,GAAG,OAArC,UACI,iBAAKN,UAAU,gBAAf,WACI,+BACI,2BACA,SAAC,EAAD,CACIN,YAAaA,EACbC,SAAUM,EAAYM,SAASC,MAAM,IACrCZ,IAAK,MAET,mBACA,SAAC,EAAD,CAAiBF,YAAaA,EAAaC,SAAUM,EAAYQ,KAAKD,MAAM,IAAKZ,IAAK,MACtF,mBACA,SAAC,EAAD,CAAiBF,YAAaA,EAAaC,SAAUM,EAAYS,IAAIF,MAAM,IAAKZ,IAAK,SAErF,SAAC,IAAD,CACIe,OAAQ,SAACC,GACLA,EACKC,WAAWZ,EAAYa,OACvBC,SAAS,KACTC,YAEAH,WAAWZ,EAAYgB,OACvBF,SAAS,KACTC,YAEAH,WAAWZ,EAAYiB,OACvBH,SAAS,KACTC,YAEAG,SAETC,QAAS,CACLC,MAAM,SAKlB,iBAAKrB,UAAU,mBAAf,WACI,SAAC,KAAD,CAAMsB,GAAG,WAAWtB,UAAU,cAA9B,SAA6CC,EAAYsB,cACzD,SAAC,KAAD,CAAMD,GAAG,SAAStB,UAAU,cAA5B,SAA2CC,EAAYuB,oB,2BCtB3E,EAxByB,WACvB,OAAsCtB,EAAAA,EAAAA,UAAS,IAA/C,eAAOD,EAAP,KAAoBwB,EAApB,KAEQC,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,iBAAxBF,SAUR,OARAtB,EAAAA,EAAAA,YAAU,WACJH,EAAYyB,IAGID,EAAP,OAAbC,EAAmCG,EAAAA,GAA0BC,EAAAA,MAC5D,CAACJ,EAAUzB,EAAawB,IAGvBM,OAAOC,KAAK/B,GAAagC,QAK3B,SAAC,EAAD,CACIhC,YAAaA,KALV,SAAC,IAAD,CAAQiC,KAAK","sources":["components/AnimatedLetters.jsx","features/Landing/LandingPresentation.jsx","features/Landing/LandingContainer.js"],"sourcesContent":["const AnimatedLetters = ({ letterClass, strArray, idx }) => {\r\n  return (\r\n    <span>\r\n      {strArray.map((char, i) => (\r\n        <span key={char + i} className={`${letterClass} _${i + idx}`}>\r\n          {char}\r\n        </span>\r\n      ))}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default AnimatedLetters","import { useEffect, useState } from 'react';\r\nimport AnimatedLetters from '../../components/AnimatedLetters';\r\nimport Typewriter from \"typewriter-effect\";\r\nimport { Link } from 'react-router-dom';\r\nimport './landing.scss';\r\n\r\nconst LandingPresentation = ({landingData}) => {\r\n    const [letterClass, setLetterClass] = useState('text-animate');\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n          setLetterClass('text-animate-hover')\r\n        }, 4000)\r\n    })\r\n\r\n    return (\r\n        <div className=\"landing__section\" id=\"home\">\r\n            <div className=\"landing__text\">\r\n                <header>\r\n                    <h1>\r\n                    <AnimatedLetters \r\n                        letterClass={letterClass} \r\n                        strArray={landingData.greeting.split('')} \r\n                        idx={12} \r\n                    />\r\n                    <br />\r\n                    <AnimatedLetters letterClass={letterClass} strArray={landingData.name.split('')} idx={15} />\r\n                    <br />\r\n                    <AnimatedLetters letterClass={letterClass} strArray={landingData.job.split('')} idx={20} />\r\n                    </h1>\r\n                    <Typewriter\r\n                        onInit={(typewriter)=> {\r\n                            typewriter              \r\n                                .typeString(landingData.type1)\r\n                                .pauseFor(2000)\r\n                                .deleteAll()\r\n\r\n                                .typeString(landingData.type2)\r\n                                .pauseFor(1000)\r\n                                .deleteAll()\r\n\r\n                                .typeString(landingData.type3)\r\n                                .pauseFor(2000)\r\n                                .deleteAll()\r\n\r\n                                .start();\r\n                        }}\r\n                        options={{\r\n                            loop: true\r\n                        }}\r\n                    />\r\n                </header>\r\n\r\n                <div className='landing__buttons'>\r\n                    <Link to=\"/contact\" className='flat-button'>{landingData.btnContact}</Link>\r\n                    <Link to=\"/about\" className='flat-button'>{landingData.btnAbout}</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPresentation;","import { useEffect, useState, useContext } from 'react'\r\nimport Loader from 'react-loaders'\r\n\r\nimport LandingPresentation from './LandingPresentation'\r\nimport en from '../../locales/en.json'\r\nimport fr from '../../locales/fr.json'\r\n\r\nimport { LanguageContext } from '../Layout/MainLayout';\r\n\r\nconst LandingContainer = () => {\r\n  const [landingData, setLandingData] = useState({});\r\n\r\n  const { language } = useContext(LanguageContext);\r\n\r\n  useEffect(() => {\r\n    if (landingData[language]) {\r\n      return;\r\n    }\r\n    language === 'fr' ? setLandingData(fr.home) : setLandingData(en.home);\r\n  }, [language, landingData, setLandingData])\r\n\r\n\r\n  if(!Object.keys(landingData).length) {\r\n    return <Loader type=\"pacman\" />\r\n  } \r\n\r\n  return (\r\n    <LandingPresentation \r\n        landingData={landingData} \r\n    />\r\n  )\r\n}\r\n\r\nexport default LandingContainer;\r\n"],"names":["letterClass","strArray","idx","map","char","i","className","landingData","useState","setLetterClass","useEffect","setTimeout","id","greeting","split","name","job","onInit","typewriter","typeString","type1","pauseFor","deleteAll","type2","type3","start","options","loop","to","btnContact","btnAbout","setLandingData","language","useContext","LanguageContext","fr","en","Object","keys","length","type"],"sourceRoot":""}