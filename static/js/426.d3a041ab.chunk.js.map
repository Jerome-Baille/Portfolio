{"version":3,"file":"static/js/426.d3a041ab.chunk.js","mappings":"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","sources":["components/stackIconsDisplay/StackIconsDisplay.jsx","features/About/AboutPresentation.jsx","features/About/AboutContainer.js","components/CustomCard.jsx","features/Certifications/CertificationsPresentation.jsx","features/Certifications/CertificationsContainer.js","components/CustomForm.jsx","features/Contact/ContactForm/ContactFormContainer.js","features/Contact/ContactPresentation.jsx","features/Contact/ContactContainer.js","components/AnimatedLetters.jsx","features/Landing/LandingPresentation.jsx","features/Landing/LandingContainer.js","features/Layout/HomeLayout.js","../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","features/Projects/ProjectsPresentation.jsx","features/Projects/ProjectsContainer.js"],"sourcesContent":["import './stackIconsDisplay.scss'\r\n\r\nconst StackIconsDisplay = ({ item }) => {\r\n    return (\r\n        <div className='stack__element'>\r\n            <img src={process.env.PUBLIC_URL + item.url} alt={item.name} />\r\n            <p>{item.name}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StackIconsDisplay;","import React, { useEffect, useRef } from 'react';\r\nimport StackIconsDisplay from '../../components/stackIconsDisplay/StackIconsDisplay';\r\nimport './about.scss';\r\n\r\nconst AboutPresentation = ({ \r\n    descriptionButtonType, \r\n    aboutData: { greetings, signature, profilePicture, descriptions : { [descriptionButtonType]: { content: description } } }, \r\n    technologyList, \r\n    descriptionLengthButtons\r\n}) => {\r\n    const componentRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(entries => {\r\n            entries.forEach(entry => {\r\n                if (entry.isIntersecting) {\r\n                    componentRef.current.classList.add('animate');\r\n                } \r\n            });\r\n        });\r\n        observer.observe(componentRef.current);\r\n\r\n        return () => observer.disconnect();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\"  ref={componentRef}>\r\n            <section className=\"about__section inside-container\">\r\n                <div className=\"about__text\">\r\n                    <h1>\r\n                        {greetings}\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"1em\" height=\"1em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 64 64\">\r\n                            <path fill=\"#42ade2\" d=\"M16.1 48.5c-.5-.1-.9-.2-1.4-.4c-.5-.2-.9-.3-1.3-.5c-.9-.4-1.7-.9-2.5-1.5C9.3 45 8 43.5 7 41.7C6 40 5.4 38 5.3 36.1c-.1-1 0-1.9.1-2.9c.1-.5.2-.9.3-1.4c.1-.5.3-.9.4-1.4l.1 1.4c0 .5.1.9.2 1.4c.1.9.3 1.8.5 2.6c.4 1.7 1 3.3 1.9 4.8c.9 1.5 1.9 2.9 3.2 4.2c.6.6 1.3 1.2 2 1.8c.3.3.7.6 1.1.9l1 1m-.3 3.6c-.3.2-.7.3-1.1.4c-.4.1-.7.2-1.1.2c-.7.1-1.5.2-2.3.1c-1.5-.1-3.1-.5-4.4-1.2c-1.4-.7-2.6-1.8-3.4-3.1c-.4-.6-.8-1.3-1.1-2c-.1-.3-.2-.7-.3-1.1c0-.3-.1-.6-.1-1c.3.3.5.6.7.8c.3.3.5.6.7.8c.5.5.9 1 1.4 1.4c1 .9 2 1.7 3.2 2.3c1.1.6 2.4 1.1 3.6 1.5c.6.2 1.3.3 2 .5c.3.1.7.1 1 .2c.5.1.8.1 1.2.2M38.4 3.5c.5.1.9.3 1.4.5c.5.2.9.4 1.3.6c.9.5 1.7 1 2.5 1.6c1.6 1.2 2.9 2.8 3.8 4.6c.9 1.8 1.4 3.8 1.4 5.7c0 1-.1 1.9-.3 2.9c-.1.5-.2.9-.4 1.4c-.2.5-.3.9-.5 1.3l-.1-1.4c0-.5 0-.9-.1-1.4l-.3-2.7c-.3-1.7-.9-3.4-1.7-5c-.8-1.6-1.8-3-3-4.3c-.6-.7-1.3-1.3-1.9-2c-.3-.3-.7-.6-1.1-.9l-1-.9m8.7-.4c.4.1.7.2 1 .4c.3.1.7.3 1 .5c.6.4 1.2.8 1.8 1.3c1.1 1 2 2.2 2.5 3.6c.6 1.4.8 2.9.6 4.4c-.1.7-.3 1.4-.5 2.1c-.1.3-.3.7-.4 1c-.2.3-.3.6-.6.9v-2c0-.7-.1-1.3-.1-1.9c-.2-1.3-.4-2.5-.9-3.6c-.5-1.2-1.1-2.2-1.8-3.3c-.4-.5-.8-1.1-1.2-1.6c-.2-.3-.4-.5-.7-.8c-.2-.5-.5-.8-.7-1\"/><path fill=\"#ffdd67\" d=\"M10 18c-2 .9-2.7 3.3-1.8 5.3l12.6 26.3l7-3.3l-12.6-26.4c-.9-2-3.2-2.9-5.2-1.9m33.1 20.9l7.4-3.5l-14.4-30c-1-2-3.4-2.9-5.5-1.9c-2 1-2.9 3.4-1.9 5.5l14.4 29.9\"/>\r\n                            <path fill=\"#eba352\" d=\"M30.7 3.4c-.2.1-.4.2-.6.4c1.9-.5 3.9.4 4.8 2.2l14.4 30l1.3-.6l-14.4-30c-1-2.1-3.4-3-5.5-2\"/>\r\n                            <path fill=\"#ffdd67\" d=\"m27.8 46.2l7.7-3.7l-14.7-30.6c-1-2.1-3.6-3.1-5.7-2.1s-3 3.6-2 5.7l14.7 30.7\"/>\r\n                            <path fill=\"#eba352\" d=\"M15.1 9.9c-.2.1-.4.2-.6.4c1.9-.5 4.1.4 5 2.3l9.1 19.1l2.2 1.3l-10-21c-1-2.2-3.5-3.1-5.7-2.1\"/>\r\n                            <path fill=\"#ffdd67\" d=\"m34.3 40.1l7.7-3.7L27.3 5.8c-1-2.1-3.6-3.1-5.7-2c-2.1 1-3 3.6-2 5.7l14.7 30.6\"/>\r\n                            <path fill=\"#eba352\" d=\"M21.6 3.7c-.2.1-.4.3-.6.4c1.9-.5 4.1.4 5 2.3L36.3 28l2.2 1.3L27.3 5.8c-1-2.2-3.6-3.1-5.7-2.1M10 18c-.2.1-.4.2-.6.4c1.8-.5 3.7.4 4.5 2.2l7.5 15.7l2.2 1.3L15.2 20c-.9-2.1-3.2-3-5.2-2\"/>\r\n                            <path fill=\"#ffdd67\" d=\"M60.8 15c-2.7-2.1-7.1.2-9.3 7.4c-1.5 5-1.7 6.5-4.9 8l-1.8-3.7S16.4 40.4 17.5 42.6c0 0 3.4 10.6 9.2 15.5c8.6 7.4 28.7-.5 29.6-19.6c.5-11.1 7.4-21.2 4.5-23.5\"/>\r\n                            <g fill=\"#eba352\">\r\n                            <path d=\"M60.8 15c-.5-.4-1.1-.6-1.7-.7c.1.1.3.1.4.2c3 2.3-.1 7.6-1.8 12.4c-1.4 3.8-2.6 7.7-2.4 11.5c.8 16.6-15.9 24.5-25.9 21.5c9.8 4.1 28-3.7 27.2-21c-.2-3.8.9-7.5 2.4-11.5c1.6-4.8 4.7-10.1 1.8-12.4\"/>\r\n                            <path d=\"M47.5 30c-6.2.7-15.3 9.6-8.9 19.3c-4.7-9.8 3-16.4 7.9-18.7c.5-.4 1-.6 1-.6\"/>\r\n                            </g>\r\n                        </svg>\r\n                    </h1>\r\n                    <div className='about__buttons'>\r\n                        {descriptionLengthButtons}\r\n                    </div>\r\n                    <div id=\"description\">\r\n                        <p>\r\n                            {description}\r\n                        </p>\r\n                    </div>\r\n                    <div className='about__signature'>\r\n                        <img src={process.env.PUBLIC_URL + signature.src} alt={signature.alt}/>\r\n                    </div>\r\n                </div>\r\n                <div className='about__image'>\r\n                    <img src={process.env.PUBLIC_URL + profilePicture.src} className=\"framed-picture\" alt={profilePicture.alt} />\r\n\r\n                    <section className='about__stack'>\r\n                        {Object.values(technologyList).map((item) => (\r\n                            <StackIconsDisplay key={item.id} item={item} />\r\n                        ))}\r\n                    </section>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AboutPresentation;","import { useEffect, useMemo, useState, useContext } from 'react'\r\nimport Loader from 'react-loaders'\r\n\r\nimport AboutPresentation from './AboutPresentation'\r\nimport en from '../../locales/en.json'\r\nimport fr from '../../locales/fr.json'\r\n\r\nimport { LanguageContext } from '../Layout/MainLayout';\r\n\r\nconst AboutContainer = () => {\r\n  const [aboutData, setAboutData] = useState({});\r\n  const [descriptionButtonType, setDescriptionButtonType] = useState('medium');\r\n\r\n  const { language } = useContext(LanguageContext);\r\n\r\n  const descriptionOptions = [\r\n    { label: aboutData.descriptions?.short.label, value: 'short' },\r\n    { label: aboutData.descriptions?.medium.label, value: 'medium' },\r\n    { label: aboutData.descriptions?.long.label, value: 'long' },\r\n  ];\r\n  \r\n  const descriptionLengthButtons = (\r\n    <>\r\n    {descriptionOptions.map((option) => (\r\n      <button\r\n        key={option.value}\r\n        className={`flat-button ${option.value === descriptionButtonType ? 'active' : ''}`}\r\n        onClick={() => setDescriptionButtonType(option.value)}\r\n      >\r\n        {option.label}\r\n      </button>\r\n    ))}\r\n    </>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (aboutData[language]) {\r\n      return;\r\n    }\r\n    language === 'fr' ? setAboutData(fr.about) : setAboutData(en.about);\r\n  }, [language, aboutData, setAboutData])\r\n\r\n  const technologyList = useMemo(() => {\r\n    return require('../../assets/technologyList.json');\r\n  }, []);\r\n\r\n  if(!Object.keys(aboutData).length || !Object.keys(technologyList).length) {\r\n    return <Loader type=\"pacman\" />\r\n  } \r\n\r\n  return (\r\n    <AboutPresentation \r\n        descriptionButtonType={descriptionButtonType}\r\n        aboutData={aboutData} \r\n        technologyList={technologyList} \r\n        descriptionLengthButtons={descriptionLengthButtons} \r\n    />\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default AboutContainer;\r\n","import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    borderRadius: 4,\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\nconst borderColor = (status) => {\r\n    switch (status) {\r\n        case 'completed':\r\n            return '#bfe3b4';\r\n        case 'inProgress':\r\n            return '#BEBEBE';\r\n        case 'planned':\r\n            return '#967bb6';\r\n        default:\r\n            return '$primary-color';\r\n    }\r\n}\r\n\r\nconst CustomCard = ({ \r\n    dataCardGeneric,\r\n    dataCardLocale,\r\n    modal\r\n }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    \r\n    return (\r\n        <>\r\n            <Card\r\n                sx={{ \r\n                    border: '5px solid', \r\n                    borderColor: borderColor(dataCardGeneric.status),\r\n                    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.16)',\r\n                    transition: 'box-shadow 0.2s ease-in-out',\r\n                    '&:hover': {\r\n                        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.24)'\r\n                    }\r\n                }}\r\n            >\r\n                <CardHeader\r\n                    sx={{ height: '95px' }}\r\n                    avatar={\r\n                    <Avatar sx={{ bgcolor: 'transparent' }} aria-label=\"recipe\">\r\n                        <img src={process.env.PUBLIC_URL + dataCardGeneric.img} alt={`${dataCardLocale.name} by ${dataCardGeneric.author}`} />\r\n                    </Avatar>\r\n                    }\r\n                    title={dataCardLocale.name}\r\n                    subheader={dataCardLocale.type}\r\n                />\r\n                <CardActions\r\n                    sx={{ display: 'flex', justifyContent: 'space-between' }}\r\n                >\r\n                    <Button \r\n                        size=\"small\"\r\n                        href={dataCardGeneric.url}\r\n                        target=\"_blank\" \r\n                        rel=\"noopener noreferrer\" \r\n                    >\r\n                        Link\r\n                    </Button>\r\n                    <Button \r\n                        onClick={handleOpen}\r\n                    >\r\n                        See details\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <h2>\r\n                        {dataCardLocale.name}\r\n                    </h2>\r\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 5 }}>\r\n                        <span className='accent-color'>{modal.author} : </span>\r\n                        {dataCardGeneric.author}\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                        <span className='accent-color'>{modal.type} : </span> \r\n                        {dataCardLocale.type}\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                        <span className='accent-color'>{modal.content} :</span>\r\n                        <br/>\r\n                        {dataCardLocale.descriptions.split('\\n').map((sentence, idx) => (\r\n                                <span key={idx}>\r\n                                    <span className='accent-color'>{idx+1} - </span>{sentence}<br/>\r\n                                </span>\r\n                            ))\r\n                        }\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                        <span className='accent-color'>{modal.source} :</span>\r\n                        <br/> \r\n                        <a \r\n                            href={dataCardGeneric.url}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            {dataCardGeneric.url}\r\n                        </a>\r\n                    </Typography>\r\n                    <button \r\n                        className='flat-button'\r\n                        onClick={handleClose}\r\n                    >\r\n                        {modal.close}\r\n                    </button>\r\n                </Box>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomCard;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nimport CustomCard from '../../components/CustomCard';\r\n\r\nimport './certifications.scss';\r\n\r\nconst CertificationsPresentation = ({ \r\n    certificationsDataGeneric, \r\n    certificationsDataLocale,\r\n    onSelectOption\r\n}) => {\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n    const componentRef = useRef(null);\r\n\r\n    const handleSelectChange = (event) => {\r\n        const option = event.target.value;\r\n        setSelectedOption(option);\r\n        onSelectOption(option);\r\n      };\r\n\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(entries => {\r\n            entries.forEach(entry => {\r\n                if (entry.isIntersecting) {\r\n                    componentRef.current.classList.add('animate');\r\n                } \r\n            });\r\n        });\r\n        observer.observe(componentRef.current);\r\n\r\n        return () => observer.disconnect();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='container' ref={componentRef}>\r\n            <section className='certifications__section inside-container'>\r\n                <h1>\r\n                    {certificationsDataLocale.title}\r\n                </h1>\r\n                <p>\r\n                    {certificationsDataLocale.subtitle}\r\n                </p>\r\n\r\n                <FormControl \r\n                    sx={{ \r\n                        minWidth: 250,\r\n                    }}\r\n                >\r\n                    <InputLabel id=\"select-certifications-label\">\r\n                        {certificationsDataLocale.filters.label}\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"select-certifications-label\"\r\n                        id=\"select-certifications\"\r\n                        value={selectedOption}\r\n                        label={certificationsDataLocale.filters.label}\r\n                        onChange={handleSelectChange}\r\n                        MenuProps={{\r\n                            disableScrollLock: true,\r\n                          }}\r\n                    >\r\n                        {Object.entries(certificationsDataLocale.filters.type).map(([key, value]) => (\r\n                            <MenuItem key={key} value={key}>\r\n                                {value}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <div className=\"certifications__cards\">\r\n                    {Object.keys(certificationsDataGeneric).map((certification, index) => (\r\n                        <CustomCard \r\n                            key={index}\r\n                            dataCardGeneric={certificationsDataGeneric[certification]}\r\n                            dataCardLocale={certificationsDataLocale[certification]}\r\n                            modal={certificationsDataLocale.modal}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CertificationsPresentation;","import { useContext, useEffect, useState } from 'react';\r\nimport Loader from 'react-loaders'\r\nimport CertificationsPresentation from './CertificationsPresentation';\r\nimport certificationsList from '../../assets/certificationsList.json';\r\nimport en from '../../locales/en.json';\r\nimport fr from '../../locales/fr.json';\r\nimport { LanguageContext } from '../Layout/MainLayout';\r\n\r\nconst CertificationsContainer = () => {\r\n    const { language } = useContext(LanguageContext);\r\n    const [certificationsDataLocale, setCertificationsDataLocale] = useState({});\r\n    const [certificationsDataGeneric, setCertificationsDataGeneric] = useState({});\r\n\r\n    useEffect(() => {\r\n        setCertificationsDataLocale(language === 'fr' ? fr.certifications : en.certifications);\r\n        setCertificationsDataGeneric(certificationsList);\r\n    }, [language, certificationsDataLocale]);\r\n\r\n    const handleSelectedOption = (option) => {\r\n        if (option.toLowerCase() === \"all\") {\r\n            setCertificationsDataGeneric(certificationsList);\r\n        } else {\r\n            const filteredCertifications = {};\r\n            for (const [key, value] of Object.entries(certificationsList)) {\r\n                if (value.status.toLowerCase() === option.toLowerCase()) {\r\n                    filteredCertifications[key] = value;\r\n                }\r\n            }\r\n            setCertificationsDataGeneric(filteredCertifications);\r\n        }\r\n    };      \r\n\r\n    if(!Object.keys(certificationsDataLocale).length || !Object.keys(certificationsDataGeneric).length) {\r\n        return <Loader type=\"pacman\" />\r\n    }\r\n\r\n    return (\r\n        <CertificationsPresentation \r\n            certificationsDataGeneric={certificationsDataGeneric} \r\n            certificationsDataLocale={certificationsDataLocale}\r\n            onSelectOption={handleSelectedOption}\r\n        />\r\n    );\r\n}\r\n\r\nexport default CertificationsContainer;","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst CustomForm = ({ formData, onSubmit }) => {\r\n    const initialValues = {};\r\n    const validationSchemaFields = {};\r\n\r\n    // loop through formData.inputs to create initialValues and validationSchemaFields\r\n    Object.keys(formData.inputs).forEach((key) => {\r\n        const input = formData.inputs[key];\r\n        initialValues[key] = '';\r\n        let validationSchema = Yup.string().required(input.required);\r\n\r\n        if (input.type === 'email') {\r\n        validationSchema = validationSchema.email(input.invalid);\r\n        } \r\n\r\n        validationSchemaFields[key] = validationSchema;\r\n    });\r\n\r\n    const handleSubmit = (values, {resetForm}) => {\r\n        resetForm();\r\n        onSubmit(values);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={handleSubmit}\r\n            validationSchema={Yup.object().shape(validationSchemaFields)}\r\n        >\r\n        {({ isSubmitting, isValid, dirty }) => (\r\n            <Form>\r\n                {Object.keys(formData.inputs).map((key, index) => {\r\n                    const input = formData.inputs[key];\r\n                    return (\r\n                        <Field key={key} name={key}>\r\n                            {({ field, meta }) => (\r\n                                <TextField\r\n                                    sx={{ \r\n                                        '& .MuiOutlinedInput-root': {\r\n                                            '& fieldset': {\r\n                                              borderColor: '#335384',\r\n                                            },\r\n                                            '& input:valid + fieldset': {\r\n                                              borderColor: 'green',\r\n                                              borderWidth: 2,\r\n                                            }\r\n                                          },\r\n                                    }}\r\n                                    id={key}\r\n                                    label={input.label}\r\n                                    type={input.type}\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    multiline={input.type === 'textarea'}\r\n                                    rows={input.type === 'textarea' ? 5 : 1}\r\n                                    {...field}\r\n                                    error={meta.touched && !!meta.error}\r\n                                    helperText={meta.touched && meta.error}\r\n                                />\r\n                            )}\r\n                        </Field>\r\n                    );\r\n                })}\r\n                <button\r\n                    className='flat-button'\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting || !isValid || !dirty } \r\n                >\r\n                    {formData.btnContact}\r\n                </button>\r\n            </Form>\r\n        )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default CustomForm;","import React, { useState } from 'react';\r\nimport emailjs from '@emailjs/browser'\r\nimport ContactForm from '../../../components/CustomForm'\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\nimport Snackbar from '@mui/material/Snackbar';\r\n\r\nconst ContactFormContainer = ({ formData }) => {\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [state, setState] = useState({\r\n        open: false,\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n        type: 'success'\r\n      });\r\n    const { vertical, horizontal, open, type } = state;\r\n    \r\n    const toggleToast = (type) => {\r\n        setState({ ...state, open: !open, type });\r\n        setShowAlert(!showAlert);\r\n    };\r\n\r\n    const handleFormSubmit = (values) => {\r\n        emailjs\r\n        .send(\r\n            'service_pn9jjpq',\r\n            'template_396vp3p',\r\n            values,\r\n            'qB7TpUDmabvmgndWA'\r\n        )\r\n        .then(\r\n            () => {\r\n                toggleToast('success');\r\n            },\r\n            () => {\r\n                toggleToast('error');\r\n            }\r\n        )\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {showAlert && (\r\n                <Snackbar \r\n                    anchorOrigin={{ vertical, horizontal }}\r\n                    open={open} \r\n                    autoHideDuration={4000} \r\n                    onClose={toggleToast}\r\n                    key={{ vertical, horizontal }}\r\n                >\r\n                    <Alert  \r\n                        onClose={toggleToast} \r\n                        severity={type} \r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        <AlertTitle>{type === 'success' ? formData.toast.success.title : formData.toast.error.title}</AlertTitle>\r\n                        {type === 'success' ? formData.toast.success.message : formData.toast.error.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            <ContactForm \r\n                formData={formData} \r\n                onSubmit={handleFormSubmit}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContactFormContainer","import React, { useEffect, useRef } from 'react';\r\nimport ContactFormContainer from './ContactForm/ContactFormContainer';\r\n\r\nimport './contact.scss';\r\n\r\nconst ContactPresentation = ({ \r\n    contactData: { title, subtitle, form },\r\n    onSubmit\r\n}) => {\r\n    const componentRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(entries => {\r\n            entries.forEach(entry => {\r\n                if (entry.isIntersecting) {\r\n                    componentRef.current.classList.add('animate');\r\n                } \r\n            });\r\n        });\r\n        observer.observe(componentRef.current);\r\n\r\n        return () => observer.disconnect();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\" ref={componentRef}>\r\n            <section className=\"contact__section inside-container\">\r\n                <header className='contact__header'>\r\n                    <h1>\r\n                        {title}\r\n                    </h1>\r\n                    <p>\r\n                        {subtitle}\r\n                    </p>\r\n                </header>\r\n\r\n                <section\r\n                    className='contact__section__form-animation'\r\n                >\r\n                    <ContactFormContainer \r\n                        formData={form} \r\n                        onSubmit={onSubmit}\r\n                    />\r\n                </section>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactPresentation;","import { useEffect, useState, useContext } from 'react'\r\nimport Loader from 'react-loaders'\r\n\r\nimport en from '../../locales/en.json'\r\nimport fr from '../../locales/fr.json'\r\n\r\nimport ContactPresentation from './ContactPresentation'\r\nimport { LanguageContext } from '../Layout/MainLayout';\r\n\r\nconst ContactContainer = () => {\r\n  const [contactData, setContactData] = useState({});\r\n  const { language } = useContext(LanguageContext);\r\n\r\n  useEffect(() => {\r\n    if (contactData[language]) {\r\n      return;\r\n    }\r\n    language === 'fr' ? setContactData(fr.contact) : setContactData(en.contact);\r\n  }, [language, contactData, setContactData])\r\n\r\n\r\n\r\n  if(!Object.keys(contactData).length) {\r\n    return <Loader type=\"pacman\" />\r\n  } \r\n\r\n  return (\r\n    <ContactPresentation \r\n        contactData={contactData} \r\n    />\r\n  )\r\n}\r\n\r\nexport default ContactContainer;\r\n","const AnimatedLetters = ({ letterClass, strArray, idx }) => {\r\n  return (\r\n    <span>\r\n      {strArray.map((char, i) => (\r\n        <span key={char + i} className={`${letterClass} _${i + idx}`}>\r\n          {char}\r\n        </span>\r\n      ))}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default AnimatedLetters","import { useEffect, useState } from 'react';\r\nimport AnimatedLetters from '../../components/AnimatedLetters';\r\nimport Typewriter from \"typewriter-effect\";\r\nimport { Link } from 'react-router-dom';\r\nimport './landing.scss';\r\n\r\nconst LandingPresentation = ({landingData}) => {\r\n    const [letterClass, setLetterClass] = useState('text-animate');\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n          setLetterClass('text-animate-hover')\r\n        }, 4000)\r\n    })\r\n\r\n    return (\r\n        <div className=\"landing__section\" id=\"home\">\r\n            <div className=\"landing__text\">\r\n                <header>\r\n                    <h1>\r\n                    <AnimatedLetters \r\n                        letterClass={letterClass} \r\n                        strArray={landingData.greeting.split('')} \r\n                        idx={12} \r\n                    />\r\n                    <br />\r\n                    <AnimatedLetters letterClass={letterClass} strArray={landingData.name.split('')} idx={15} />\r\n                    <br />\r\n                    <AnimatedLetters letterClass={letterClass} strArray={landingData.job.split('')} idx={20} />\r\n                    </h1>\r\n                    <Typewriter\r\n                        onInit={(typewriter)=> {\r\n                            typewriter              \r\n                                .typeString(landingData.type1)\r\n                                .pauseFor(2000)\r\n                                .deleteAll()\r\n\r\n                                .typeString(landingData.type2)\r\n                                .pauseFor(1000)\r\n                                .deleteAll()\r\n\r\n                                .typeString(landingData.type3)\r\n                                .pauseFor(2000)\r\n                                .deleteAll()\r\n\r\n                                .start();\r\n                        }}\r\n                        options={{\r\n                            loop: true\r\n                        }}\r\n                    />\r\n                </header>\r\n\r\n                <div className='landing__buttons'>\r\n                    <Link to=\"/contact\" className='flat-button'>{landingData.btnContact}</Link>\r\n                    <Link to=\"/about\" className='flat-button'>{landingData.btnAbout}</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPresentation;","import { useEffect, useState, useContext } from 'react'\r\nimport Loader from 'react-loaders'\r\n\r\nimport LandingPresentation from './LandingPresentation'\r\nimport en from '../../locales/en.json'\r\nimport fr from '../../locales/fr.json'\r\n\r\nimport { LanguageContext } from '../Layout/MainLayout';\r\n\r\nconst LandingContainer = () => {\r\n  const [landingData, setLandingData] = useState({});\r\n\r\n  const { language } = useContext(LanguageContext);\r\n\r\n  useEffect(() => {\r\n    if (landingData[language]) {\r\n      return;\r\n    }\r\n    language === 'fr' ? setLandingData(fr.home) : setLandingData(en.home);\r\n  }, [language, landingData, setLandingData])\r\n\r\n\r\n  if(!Object.keys(landingData).length) {\r\n    return <Loader type=\"pacman\" />\r\n  } \r\n\r\n  return (\r\n    <LandingPresentation \r\n        landingData={landingData} \r\n    />\r\n  )\r\n}\r\n\r\nexport default LandingContainer;\r\n","import { useEffect } from 'react';\r\nimport { animateScroll, Element } from 'react-scroll';\r\n\r\nimport About from '../About/AboutContainer';\r\nimport Certifications from '../Certifications/CertificationsContainer';\r\nimport Contact from '../Contact/ContactContainer';\r\nimport Landing from '../Landing/LandingContainer';\r\nimport Projects from '../Projects/ProjectsContainer';\r\n\r\nconst HomePresentation = () => {\r\n    useEffect(() => {\r\n        const scrollPosition = sessionStorage.getItem('scrollPosition') || 0;\r\n        animateScroll.scrollTo(scrollPosition);\r\n    })\r\n\r\n  return (\r\n    <>\r\n            <Element id=\"home\">\r\n                <Landing />\r\n            </Element>\r\n            <Element id=\"about\">\r\n                <About />\r\n            </Element>\r\n            <Element id=\"projects\">\r\n                <Projects />\r\n            </Element>\r\n            <Element id=\"certifications\">\r\n                <Certifications />\r\n            </Element>\r\n            <Element id=\"contact\">\r\n                <Contact />\r\n            </Element>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomePresentation;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      image,\n      src,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import React, { useEffect, useRef, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nimport './projects.scss';\r\n\r\nconst ProjectsPresentation = ({ \r\n    projectDataGeneric, \r\n    projectsDataLocale,\r\n    onSelectOption\r\n}) => {\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n    const componentRef = useRef(null);\r\n\r\n    const handleSelectChange = (event) => {\r\n        const option = event.target.value;\r\n        setSelectedOption(option);\r\n        onSelectOption(option);\r\n      };\r\n\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(entries => {\r\n            entries.forEach(entry => {\r\n                if (entry.isIntersecting) {\r\n                    componentRef.current.classList.add('animate');\r\n                } \r\n            });\r\n        });\r\n        observer.observe(componentRef.current);\r\n\r\n        return () => observer.disconnect();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='container' ref={componentRef}>\r\n            <section className='projects__section inside-container'>\r\n                <header className='projects__header'>\r\n                    <h1>\r\n                        {projectsDataLocale.title}\r\n                    </h1>\r\n                    <p>\r\n                        {projectsDataLocale.subtitle}\r\n                    </p>\r\n                </header>\r\n\r\n                <FormControl \r\n                    sx={{ \r\n                        minWidth: 250,\r\n                    }}\r\n                >\r\n                    <InputLabel id=\"select-technology-label\">\r\n                        {projectsDataLocale.filters.label}\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"select-technology-label\"\r\n                        id=\"select-technology\"\r\n                        value={selectedOption}\r\n                        label={projectsDataLocale.filters.label}\r\n                        onChange={handleSelectChange}\r\n                        MenuProps={{\r\n                            disableScrollLock: true,\r\n                          }}\r\n                    >\r\n                        {Object.entries(projectsDataLocale.filters.type).map(([key, value]) => (\r\n                            <MenuItem key={key} value={key}>\r\n                                {value}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <div className=\"projects__cards\">\r\n                    {Object.keys(projectDataGeneric).map((project, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            sx={{ \r\n                                position: 'relative',\r\n                                maxWidth: '300px',\r\n                                margin: '0 auto',\r\n                                boxShadow: '0 2px 4px rgba(0, 0, 0, 0.16)',\r\n                                transition: 'box-shadow 0.2s ease-in-out',\r\n                                '&:hover': {\r\n                                    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.24)'\r\n                                }\r\n                            }}\r\n                        >\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                image={process.env.PUBLIC_URL + projectDataGeneric[project]?.logo}\r\n                                alt={projectsDataLocale[project]?.logo.alt}\r\n                            />\r\n                            <Link \r\n                                to={`/projects/${projectDataGeneric[project]?.id}`} \r\n                                className=\"projects__cards__link\" \r\n                                aria-label={projectsDataLocale.link.label + projectsDataLocale[project]?.title} \r\n                            />\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectsPresentation;","import { useContext, useEffect, useState } from 'react';\r\nimport Loader from 'react-loaders'\r\nimport ProjectsPresentation from './ProjectsPresentation';\r\nimport projectList from '../../assets/projectList.json';\r\nimport en from '../../locales/en.json';\r\nimport fr from '../../locales/fr.json';\r\nimport { LanguageContext } from '../Layout/MainLayout';\r\n\r\nconst ProjectsContainer = () => {\r\n    const { language } = useContext(LanguageContext);\r\n    const [projectsDataLocale, setProjectsDataLocale] = useState({});\r\n    const [projectDataGeneric, setProjectsDataGeneric] = useState({});\r\n\r\n    useEffect(() => {\r\n        setProjectsDataLocale(language === 'fr' ? fr.projects : en.projects);\r\n        setProjectsDataGeneric(projectList);\r\n    }, [language, projectsDataLocale]);\r\n\r\n    const handleSelectedOption = (option) => {\r\n        console.log(option);\r\n        if (option.toLowerCase() === \"all\") {\r\n          setProjectsDataGeneric(projectList);\r\n        } else {\r\n          const filteredProjects = {};\r\n          for (const [key, value] of Object.entries(projectList)) {\r\n            const tagsArray = value.tags.split(\", \");\r\n            if (tagsArray.some((tag) => tag.toLowerCase() === option.toLowerCase())) {\r\n              filteredProjects[key] = value;\r\n            }\r\n          }\r\n          setProjectsDataGeneric(filteredProjects);\r\n        }\r\n      };\r\n      \r\n\r\n    if(!Object.keys(projectsDataLocale).length || !Object.keys(projectDataGeneric).length) {\r\n        return <Loader type=\"pacman\" />\r\n    }\r\n\r\n    return (\r\n        <ProjectsPresentation \r\n            projectDataGeneric={projectDataGeneric} \r\n            projectsDataLocale={projectsDataLocale}\r\n            onSelectOption={handleSelectedOption}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProjectsContainer;\r\n"],"names":["item","className","src","process","url","alt","name","descriptionButtonType","aboutData","greetings","signature","profilePicture","description","descriptions","content","technologyList","descriptionLengthButtons","componentRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","current","classList","add","observe","disconnect","ref","xmlns","role","width","height","preserveAspectRatio","viewBox","fill","d","id","Object","values","map","StackIconsDisplay","useState","setAboutData","setDescriptionButtonType","language","useContext","LanguageContext","descriptionOptions","label","short","value","medium","long","option","onClick","fr","en","useMemo","require","keys","length","type","style","position","top","left","transform","bgcolor","border","borderRadius","boxShadow","p","borderColor","status","dataCardGeneric","dataCardLocale","modal","React","open","setOpen","handleClose","Card","sx","transition","CardHeader","avatar","Avatar","img","author","title","subheader","CardActions","display","justifyContent","Button","size","href","target","rel","Modal","onClose","Box","Typography","mt","split","sentence","idx","source","close","certificationsDataGeneric","certificationsDataLocale","onSelectOption","selectedOption","setSelectedOption","subtitle","FormControl","minWidth","InputLabel","filters","Select","labelId","onChange","event","MenuProps","disableScrollLock","key","MenuItem","certification","index","setCertificationsDataLocale","setCertificationsDataGeneric","certificationsList","toLowerCase","filteredCertifications","formData","onSubmit","initialValues","validationSchemaFields","inputs","input","validationSchema","Yup","required","email","invalid","resetForm","shape","isSubmitting","isValid","dirty","field","meta","TextField","borderWidth","variant","fullWidth","margin","multiline","rows","error","touched","helperText","disabled","btnContact","showAlert","setShowAlert","vertical","horizontal","state","setState","toggleToast","Snackbar","anchorOrigin","autoHideDuration","Alert","severity","AlertTitle","toast","success","message","emailjs","then","contactData","form","setContactData","letterClass","strArray","char","i","landingData","setLetterClass","setTimeout","greeting","job","onInit","typewriter","typeString","type1","pauseFor","deleteAll","type2","type3","start","options","loop","to","btnAbout","setLandingData","scrollPosition","sessionStorage","getItem","animateScroll","getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardMediaRoot","styled","overridesResolver","props","styles","ownerState","isMediaComponent","isImageComponent","root","media","_extends","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","inProps","useThemeProps","children","component","image","other","_objectWithoutPropertiesLoose","indexOf","composedStyle","backgroundImage","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","as","undefined","projectDataGeneric","projectsDataLocale","project","maxWidth","logo","link","setProjectsDataLocale","setProjectsDataGeneric","projectList","console","log","filteredProjects","tags","some","tag"],"sourceRoot":""}